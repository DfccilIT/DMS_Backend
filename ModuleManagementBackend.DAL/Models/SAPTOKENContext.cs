// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ModuleManagementBackend.DAL.Models
{
    public partial class SAPTOKENContext : DbContext
    {
        public SAPTOKENContext()
        {
        }

        public SAPTOKENContext(DbContextOptions<SAPTOKENContext> options)
            : base(options)
        {
        }

        public virtual DbSet<EditEmployeeDetail> EditEmployeeDetails { get; set; }
        public virtual DbSet<EmployeeDependentDocument> EmployeeDependentDocuments { get; set; }
        public virtual DbSet<MstContractEmployeeMaster> MstContractEmployeeMasters { get; set; }
        public virtual DbSet<MstContractMaster> MstContractMasters { get; set; }
        public virtual DbSet<MstDepartment> MstDepartments { get; set; }
        public virtual DbSet<MstEmployeeDependent> MstEmployeeDependents { get; set; }
        public virtual DbSet<MstEmployeeMaster> MstEmployeeMasters { get; set; }
        public virtual DbSet<MstPost> MstPosts { get; set; }
        public virtual DbSet<MstUnit> MstUnits { get; set; }
        public virtual DbSet<RegisterContractEmployee> RegisterContractEmployees { get; set; }
        public virtual DbSet<SMSLogDetail> SMSLogDetails { get; set; }
        public virtual DbSet<UnitNameDetail> UnitNameDetails { get; set; }
        public virtual DbSet<kraUser> kraUsers { get; set; }
        public virtual DbSet<mstPositionGreade> mstPositionGreades { get; set; }
        public virtual DbSet<tblDownLoadLog> tblDownLoadLogs { get; set; }
        public virtual DbSet<tblEmployeeOfTheMonth> tblEmployeeOfTheMonths { get; set; }
        public virtual DbSet<tblNoticeBoard> tblNoticeBoards { get; set; }
        public virtual DbSet<tblPolice> tblPolices { get; set; }
        public virtual DbSet<tblPolicyItem> tblPolicyItems { get; set; }
        public virtual DbSet<todoList> todoLists { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Latin1_General_CI_AI");

            modelBuilder.Entity<EditEmployeeDetail>(entity =>
            {
                entity.HasKey(e => e.EdtEmpDetID)
                    .HasName("PK__EditEmpl__E59D387ED21E1B97");

                entity.Property(e => e.DOB).HasColumnType("datetime");

                entity.Property(e => e.DateOfAnniversary).HasColumnType("datetime");

                entity.Property(e => e.DateOfJoining).HasColumnType("datetime");

                entity.Property(e => e.Department)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Designation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.EmployeeCode).HasMaxLength(50);

                entity.Property(e => e.ExtensionNo).HasMaxLength(200);

                entity.Property(e => e.Gender).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.Mobile).HasMaxLength(50);

                entity.Property(e => e.PersonalEmailId).HasMaxLength(50);

                entity.Property(e => e.PositionGrade).HasMaxLength(255);

                entity.Property(e => e.ReportingOfficer).HasMaxLength(100);

                entity.Property(e => e.SubArea)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SubDepartment)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TableName)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Toemploy).HasMaxLength(255);

                entity.Property(e => e.UserName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.remarks).HasMaxLength(100);

                entity.Property(e => e.status).HasDefaultValueSql("((99))");
            });

            modelBuilder.Entity<EmployeeDependentDocument>(entity =>
            {
                entity.HasKey(e => e.DocumentId)
                    .HasName("PK__Employee__1ABEEF0F35385D24");

                entity.Property(e => e.DocumentName)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.DocumentType).HasMaxLength(100);

                entity.Property(e => e.FilePath).IsRequired();

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.UploadedBy).HasMaxLength(100);

                entity.Property(e => e.UploadedDate)
                    .HasColumnType("date")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.fkDependent)
                    .WithMany(p => p.EmployeeDependentDocuments)
                    .HasForeignKey(d => d.fkDependentId)
                    .HasConstraintName("FK_EmployeeDependentDocuments_Dependent");
            });

            modelBuilder.Entity<MstContractEmployeeMaster>(entity =>
            {
                entity.HasKey(e => e.PkCntEmpMstId)
                    .HasName("PK__MstContr__2FE6343DE8AE1113");

                entity.ToTable("MstContractEmployeeMaster");

                entity.Property(e => e.OfficeOrder)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks).IsUnicode(false);

                entity.HasOne(d => d.fkContract)
                    .WithMany(p => p.MstContractEmployeeMasters)
                    .HasForeignKey(d => d.fkContractid)
                    .HasConstraintName("FK__MstContra__fkCon__53F837BE");

                entity.HasOne(d => d.fkEmployeeMasterAuto)
                    .WithMany(p => p.MstContractEmployeeMasters)
                    .HasForeignKey(d => d.fkEmployeeMasterAutoId)
                    .HasConstraintName("FK__MstContra__fkEmp__0EAEE938");
            });

            modelBuilder.Entity<MstContractMaster>(entity =>
            {
                entity.HasKey(e => e.PkContractid)
                    .HasName("PK__MstContr__8DE93C070E0CBC70");

                entity.ToTable("MstContractMaster");

                entity.HasIndex(e => new { e.Contractor, e.DeptDfccil }, "UQ_Contractor_DeptDfccil")
                    .IsUnique();

                entity.Property(e => e.ContractDate)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Contractor)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DeptDfccil)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MstDepartment>(entity =>
            {
                entity.HasKey(e => e.Departmentid);

                entity.ToTable("MstDepartment");

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Department).HasMaxLength(50);

                entity.Property(e => e.IP).HasMaxLength(50);

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<MstEmployeeDependent>(entity =>
            {
                entity.HasKey(e => e.pkDependentId)
                    .HasName("PK__MstEmplo__4480992377456A3B");

                entity.ToTable("MstEmployeeDependent");

                entity.Property(e => e.DName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.Gender).HasMaxLength(20);

                entity.Property(e => e.Relation)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.createdBy)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.createdDate).HasColumnType("date");

                entity.Property(e => e.remarks).IsUnicode(false);

                entity.Property(e => e.status).HasDefaultValueSql("((0))");

                entity.Property(e => e.updatedBy)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.updatedDate).HasColumnType("date");

                entity.HasOne(d => d.fkEmployeeMasterAuto)
                    .WithMany(p => p.MstEmployeeDependents)
                    .HasForeignKey(d => d.fkEmployeeMasterAutoId)
                    .HasConstraintName("FK__MstEmploy__fkEmp__4535171B");
            });

            modelBuilder.Entity<MstEmployeeMaster>(entity =>
            {
                entity.HasKey(e => e.EmployeeMasterAutoId);

                entity.ToTable("MstEmployeeMaster");

                entity.HasIndex(e => e.EmployeeCode, "unique_employee")
                    .IsUnique();

                entity.Property(e => e.AnniversaryDate).HasColumnType("datetime");

                entity.Property(e => e.DITSDOARailway).HasMaxLength(255);

                entity.Property(e => e.DOAbsconding).HasMaxLength(255);

                entity.Property(e => e.DOAbsorption).HasColumnType("datetime");

                entity.Property(e => e.DOB).HasColumnType("datetime");

                entity.Property(e => e.DOJDFCCIL).HasColumnType("datetime");

                entity.Property(e => e.DORecruiting).HasColumnType("datetime");

                entity.Property(e => e.DOReemployment).HasMaxLength(255);

                entity.Property(e => e.DORepatriation).HasMaxLength(255);

                entity.Property(e => e.DORetirement).HasColumnType("datetime");

                entity.Property(e => e.DOTEnds).HasMaxLength(255);

                entity.Property(e => e.DOfirstPromotion).HasColumnType("datetime");

                entity.Property(e => e.DOletter).HasMaxLength(255);

                entity.Property(e => e.DOsecondPromotion).HasColumnType("datetime");

                entity.Property(e => e.DOthirdPromotion).HasMaxLength(255);

                entity.Property(e => e.DepExtensionuptodate).HasColumnType("datetime");

                entity.Property(e => e.DepTenurecompletiondate).HasColumnType("datetime");

                entity.Property(e => e.DeptDFCCIL).HasMaxLength(255);

                entity.Property(e => e.DeputationTenure).HasColumnType("numeric(9, 2)");

                entity.Property(e => e.EmpSubgroup).HasMaxLength(255);

                entity.Property(e => e.EmployeeCode).HasMaxLength(50);

                entity.Property(e => e.EthnicOrigin).HasMaxLength(255);

                entity.Property(e => e.ExtnNo).HasMaxLength(100);

                entity.Property(e => e.FaxNo).HasMaxLength(100);

                entity.Property(e => e.GazettedNonGazetted).HasMaxLength(255);

                entity.Property(e => e.Gender).HasMaxLength(255);

                entity.Property(e => e.GenericDesignation).HasMaxLength(255);

                entity.Property(e => e.LastDesignation).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.MTNNo).HasMaxLength(100);

                entity.Property(e => e.Mobile).HasMaxLength(50);

                entity.Property(e => e.Modify_By).HasMaxLength(100);

                entity.Property(e => e.Modify_Date).HasColumnType("datetime");

                entity.Property(e => e.Modify_IP).HasMaxLength(100);

                entity.Property(e => e.PAN)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ParentOrganzation)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ParentRailway).HasMaxLength(255);

                entity.Property(e => e.PersonalEmailAddress).HasMaxLength(100);

                entity.Property(e => e.PersonalMobile).HasMaxLength(100);

                entity.Property(e => e.PersonnelArea).HasMaxLength(255);

                entity.Property(e => e.PersonnelSubArea).HasMaxLength(255);

                entity.Property(e => e.PositionGrade).HasMaxLength(255);

                entity.Property(e => e.Positions).HasColumnType("numeric(9, 0)");

                entity.Property(e => e.Post).HasMaxLength(255);

                entity.Property(e => e.Pwd).HasMaxLength(100);

                entity.Property(e => e.RBFileNo).HasMaxLength(255);

                entity.Property(e => e.Religion).HasMaxLength(255);

                entity.Property(e => e.ReportingOfficer).HasMaxLength(100);

                entity.Property(e => e.Services).HasMaxLength(255);

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.SubDeptDF).HasMaxLength(255);

                entity.Property(e => e.TOemploy).HasMaxLength(255);

                entity.Property(e => e.UserName).HasMaxLength(255);

                entity.Property(e => e.UserType).HasDefaultValueSql("((0))");

                entity.Property(e => e.designation).HasMaxLength(100);

                entity.Property(e => e.emailAddress).HasMaxLength(50);
            });

            modelBuilder.Entity<MstPost>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Post)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Postid).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<MstUnit>(entity =>
            {
                entity.HasKey(e => e.Unitid);

                entity.ToTable("MstUnit");

                entity.Property(e => e.Abbrivation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CreateBy).HasMaxLength(50);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IP).HasMaxLength(100);

                entity.Property(e => e.SectionId).HasDefaultValueSql("((0))");

                entity.Property(e => e.SequenceID).HasDefaultValueSql("((0))");

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.UnitName).HasMaxLength(50);
            });

            modelBuilder.Entity<RegisterContractEmployee>(entity =>
            {
                entity.HasKey(e => e.ContEmpID)
                    .HasName("PK__Register__8A770B2CF4D9E714");

                entity.Property(e => e.CreateDate).HasColumnType("date");

                entity.Property(e => e.DOB).HasColumnType("datetime");

                entity.Property(e => e.DOJDFCCIL).HasColumnType("datetime");

                entity.Property(e => e.DeptDFCCIL)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Gender).HasMaxLength(255);

                entity.Property(e => e.Location).HasMaxLength(255);

                entity.Property(e => e.Mobile).HasMaxLength(50);

                entity.Property(e => e.TOemploy).HasMaxLength(255);

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UpdatedDate).HasColumnType("date");

                entity.Property(e => e.UserName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.emailAddress).HasMaxLength(50);

                entity.Property(e => e.remarks).IsUnicode(false);

                entity.HasOne(d => d.ParentOrganzationNavigation)
                    .WithMany(p => p.RegisterContractEmployeeParentOrganzationNavigations)
                    .HasForeignKey(d => d.ParentOrganzation)
                    .HasConstraintName("FK__RegisterC__Paren__127F7A1C");

                entity.HasOne(d => d.fkContract)
                    .WithMany(p => p.RegisterContractEmployeefkContracts)
                    .HasForeignKey(d => d.fkContractid)
                    .HasConstraintName("FK__RegisterC__fkCon__118B55E3");
            });

            modelBuilder.Entity<SMSLogDetail>(entity =>
            {
                entity.HasKey(e => e.SMSSentId)
                    .HasName("PK_SMSSentDetail");

                entity.ToTable("SMSLogDetail");

                entity.Property(e => e.IPAddress).HasMaxLength(50);

                entity.Property(e => e.MobileNumber).HasMaxLength(500);

                entity.Property(e => e.ResponseText).HasMaxLength(500);

                entity.Property(e => e.SMSText).HasMaxLength(500);

                entity.Property(e => e.SentOn)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Status).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserId).HasMaxLength(50);
            });

            modelBuilder.Entity<UnitNameDetail>(entity =>
            {
                entity.Property(e => e.Abbrivation)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(150);
            });

            modelBuilder.Entity<kraUser>(entity =>
            {
                entity.HasKey(e => e.pkKraUser)
                    .HasName("PK__kraUser__092719B9AB30F288");

                entity.ToTable("kraUser", "form");

                entity.Property(e => e.ApprovedDate).HasColumnType("date");

                entity.Property(e => e.createdDate).HasColumnType("date");

                entity.Property(e => e.modifiedDate).HasColumnType("date");

                entity.HasOne(d => d.fkAuto)
                    .WithMany(p => p.kraUsers)
                    .HasForeignKey(d => d.fkAutoId)
                    .HasConstraintName("FK__kraUser__fkAutoI__64B8AF6C");
            });

            modelBuilder.Entity<mstPositionGreade>(entity =>
            {
                entity.HasKey(e => e.pkPGId)
                    .HasName("PK__mstPosit__5336982EE41A4F15");

                entity.Property(e => e.PositionGrade).HasMaxLength(255);
            });

            modelBuilder.Entity<tblDownLoadLog>(entity =>
            {
                entity.HasKey(e => e.pkDownLoadLogId)
                    .HasName("PK__tblDownL__D0DD7ADCAB2ECC70");

                entity.ToTable("tblDownLoadLog", "DFCpolicy");

                entity.Property(e => e.createDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.fkEmployeeMasterAuto)
                    .WithMany(p => p.tblDownLoadLogs)
                    .HasForeignKey(d => d.fkEmployeeMasterAutoId)
                    .HasConstraintName("FK__tblDownLo__fkEmp__41999061");

                entity.HasOne(d => d.fkPolItem)
                    .WithMany(p => p.tblDownLoadLogs)
                    .HasForeignKey(d => d.fkPolItemId)
                    .HasConstraintName("FK__tblDownLo__fkPol__428DB49A");
            });

            modelBuilder.Entity<tblEmployeeOfTheMonth>(entity =>
            {
                entity.HasKey(e => e.pkId)
                    .HasName("PK__tblEmplo__40A359C39161B8E3");

                entity.ToTable("tblEmployeeOfTheMonth");

                entity.Property(e => e.createBy).HasMaxLength(100);

                entity.Property(e => e.createDate).HasColumnType("datetime");

                entity.Property(e => e.status).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.fkEmployeeMasterAuto)
                    .WithMany(p => p.tblEmployeeOfTheMonths)
                    .HasForeignKey(d => d.fkEmployeeMasterAutoId)
                    .HasConstraintName("FK__tblEmploy__fkEmp__0AD36B5C");
            });

            modelBuilder.Entity<tblNoticeBoard>(entity =>
            {
                entity.HasKey(e => e.pkNoticeId)
                    .HasName("PK__tblNotic__E43BA6DFE6F8A2A4");

                entity.ToTable("tblNoticeBoard");

                entity.Property(e => e.createBy).HasMaxLength(100);

                entity.Property(e => e.createDate).HasColumnType("datetime");

                entity.Property(e => e.description).IsUnicode(false);

                entity.Property(e => e.status).HasDefaultValueSql("((0))");

                entity.Property(e => e.subject)
                    .HasMaxLength(5000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tblPolice>(entity =>
            {
                entity.HasKey(e => e.pkPolId)
                    .HasName("PK__tblPolic__FE28980C1CB621E1");

                entity.ToTable("tblPolices", "DFCpolicy");

                entity.Property(e => e.ParentPolicyId).HasDefaultValueSql("((0))");

                entity.Property(e => e.PolicyHead).IsRequired();

                entity.Property(e => e.createBy).HasMaxLength(100);

                entity.Property(e => e.createdate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.modifyBy).HasMaxLength(100);

                entity.Property(e => e.modifydate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.status).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<tblPolicyItem>(entity =>
            {
                entity.HasKey(e => e.pkPolItemId)
                    .HasName("PK__tblPolic__FCE925CE1FA8D780");

                entity.ToTable("tblPolicyItems", "DFCpolicy");

                entity.Property(e => e.createBy).HasMaxLength(100);

                entity.Property(e => e.createdate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.modifyBy).HasMaxLength(100);

                entity.Property(e => e.modifydate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.officeOrderDate).HasColumnType("datetime");

                entity.Property(e => e.status).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.fkPol)
                    .WithMany(p => p.tblPolicyItems)
                    .HasForeignKey(d => d.fkPolId)
                    .HasConstraintName("FK__tblPolicy__fkPol__4381D8D3");
            });

            modelBuilder.Entity<todoList>(entity =>
            {
                entity.HasKey(e => e.pkToDoListId)
                    .HasName("PK__todoList__752F37675E5D24C8");

                entity.ToTable("todoList");

                entity.Property(e => e.EmployeeCode).HasMaxLength(100);

                entity.Property(e => e.createDate).HasColumnType("datetime");

                entity.Property(e => e.createdBy)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.status).HasDefaultValueSql("((0))");

                entity.HasOne(d => d.fkEmp)
                    .WithMany(p => p.todoLists)
                    .HasForeignKey(d => d.fkEmpId)
                    .HasConstraintName("FK__todoList__fkEmpI__0EA3FC40");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}